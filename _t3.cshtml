@* enable the editing *@
@Edit.Enable(api: true, forms: true, context: true, autoToolbar: true)
@{
  string entityType = Content.EntityType;
}
<h1>3 - Semi-Public forms</h1>
<div>
  These are forms which are not allowed for public users, but for registered users or users in a certain group. <br>
  To test this, we must create a user-group and give only these the following permissions:
</div>
<ol>
  <li>read schema</li>
  <li>create (full-create, not draft)</li>
  <li>edit-draft only</li>
  <li>delete</li>
</ol>
<p></p>
<div>
  We won't run all tests, but we want to be sure that the system correctly handles users as not anonymous, <br>
  and that anonymous are not the same as users in a group. So we'll just want these tests:
</div>
<ol>
    <li>an anonymous user should not be able to edit</li>
    <li>an anonymous user should not be able to create</li>
    <li>a user in that group should be able to create - both draft and live</li>
    <li>a user in that group should only be able to edit into draft, not live</li>
    <li>a user in that group should be able to delete</li>
</ol>
<p></p>

<h3>@Content.EntityType</h3>
@Edit.Toolbar(ListContent)
<ol>
  <li><a href='javascript:newItemForm("@Dnn.Module.ModuleID", "@Content.EntityType")'>open form for new item, fill in, save</a></li>
  <li>open form for edit item, make change, save</li>
  <ol>
  @foreach(var cont in AsDynamic(App.Data[entityType])){
    <li style='background: @(cont.IsPublished ? "" : "yellow")'>
        <strong><a class="data-@cont.EntityTitle" href='javascript:editItemForm("@Dnn.Module.ModuleID", @cont.EntityId)'>@cont.EntityTitle</a></strong>
        <strong><a href='javascript:deleteItem("@Dnn.Module.ModuleID", @cont.EntityId, "@cont.EntityGuid", "@cont.EntityTitle")'>[DELETE]</a></strong>
        @Edit.Toolbar(cont, actions: "edit,new,add,remove,delete", contentType: @Content.EntityType)
    </li>
  }
  </ol>
</ol>
<p></p>
