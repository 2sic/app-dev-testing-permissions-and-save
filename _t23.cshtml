@* enable the editing *@
@Edit.Enable(api: true, forms: true, context: true, autoToolbar: false)
@{
  string entityType = Content.EntityType;
}
<h2>2.3 - content-type which has schema-permissions, but no others</h2>
<ul>
  <li>in this case create should fail</li>
  <li>in this case edit should fail</li>
</ul>
<p></p>

<h3>@Content.EntityType</h3>
<ol>
  <li><a href='javascript:newItemForm("@Dnn.Module.ModuleID")'>open form for new item, fill in, save</a></li>
  <li>open form for edit item, make change, save</li>
  <ol>
  @foreach(var cont in AsDynamic(App.Data[entityType])){
    <li style='background: @(cont.IsPublished ? "" : "yellow")'>
        <strong><a class="data-@cont.EntityTitle" href='javascript:editItemForm("@Dnn.Module.ModuleID",@cont.EntityId)'>@cont.EntityTitle</a></strong>
    </li>
  }
  </ol>
</ol>
<p></p>

<script>
    // simple function to run the command and handle the returned promise
    function newItemForm(tag) {
        $2sxc.cms.run(tag, "new", { contentType: "@Content.EntityType"})
            .then(function () {
                // alert("Thanks - we'll review your entry and publish it.")
            });
    }
</script>
